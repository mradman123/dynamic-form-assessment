{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d0d5ba98496c2ace7062.hot-update.js","sources":["webpack:///./components/room.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst room = props => {\r\n\r\n  const Container = styled.div`\r\n  background-color: ${ props => props.selected ? \"#ffffff\" : \"#dbdbe3\"};\r\n  width: 140px;\r\n  height: 100px;\r\n  margin: 3px;\r\n  float: left;\r\n  border: 4px solid;\r\n  border-radius: 5px;\r\n  border-color: ${ props => props.selected ? \"#e7e7e7\" : \"#d9dce5\"};\r\n`;\r\n\r\n  const Header = styled.div`\r\n  height: 20px;\r\n  padding: 0px 3px;\r\n  background-color: ${ props => props.selected ? \"#e7e7e7\" : \"#dbdbe3\"};\r\n  font-weight: ${ props => props.selected ? \"1231\" : \"nor12312mal\"};\r\n`;\r\n\r\n  const Dropdown = styled.div`\r\n  width: 40px;\r\n  height: 60px;\r\n  margin: 10px;\r\n  float: left;\r\n  font-size: 14px;\r\n`;\r\n\r\n  const { number, selected, adults, children } = props;\r\n\r\n  const roomName = 'Room ' + number;\r\n  const adultDropdown = [1, 2];\r\n  const childrenDropdown = [0, 1, 2];\r\n\r\n  return (\r\n    <Container selected={selected}>\r\n      <Header>\r\n        {number != 1 && <input type=\"checkbox\" name={roomName} checked={props.selected} onChange={event => props.handleRoomSelectionToggle(event.target.checked, props.number)} />}\r\n        {roomName}\r\n      </Header>\r\n      <Dropdown>\r\n        Adults\r\n        (18+)\r\n        <select name=\"adults\" value={adults} disabled={!selected} onChange={event => props.handleDropdownChange(event.target.name, event.target.value, props.number)} >\r\n          {adultDropdown.map(value => <option key={value} value={value}>{value}</option>)}\r\n        </select>\r\n      </Dropdown>\r\n      <Dropdown>\r\n        Children\r\n        (0-17)\r\n        <select name=\"children\" value={children} disabled={!selected} onChange={event => props.handleDropdownChange(event.target.name, event.target.value, props.number)}>\r\n          {childrenDropdown.map(value => <option key={value} value={value}>{value}</option>)}\r\n        </select>\r\n      </Dropdown>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default room;"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AAAA;AA8BA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}